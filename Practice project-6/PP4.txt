import java.sql.*;

public class JDBCExample {
    // JDBC driver and database URL
    static final String JDBC_DRIVER = "com.mysql.jdbc.Driver";
    static final String DB_URL = "jdbc:mysql://localhost/mydatabase";

    // Database credentials
    static final String USER = "username";
    static final String PASS = "password";

    public static void main(String[] args) {
        Connection conn = null;
        CallableStatement cstmt = null;

        try {
            // Register JDBC driver
            Class.forName(JDBC_DRIVER);

            // Open a connection
            System.out.println("Connecting to database...");
            conn = DriverManager.getConnection(DB_URL, USER, PASS);

            // Prepare the stored procedure call
            String sql = "{call getEmployeeName(?, ?, ?)}";
            cstmt = conn.prepareCall(sql);

            // Set the input parameter
            int employeeId = 1001;
            cstmt.setInt(1, employeeId);

            // Register the output parameters
            cstmt.registerOutParameter(2, Types.INTEGER);
            cstmt.registerOutParameter(3, Types.VARCHAR);

            // Execute the stored procedure
            System.out.println("Executing stored procedure...");
            cstmt.execute();

            // Retrieve the output parameters
            int errorCode = cstmt.getInt(2);
            String employeeName = cstmt.getString(3);

            // Check for errors
            if (errorCode != 0) {
                throw new SQLException("Stored procedure execution failed with error code: " + errorCode);
            }

            // Display the employee name
            System.out.println("Employee Name: " + employeeName);
        } catch (SQLException se) {
            // Handle database errors
            se.printStackTrace();
        } catch (Exception e) {
            // Handle other errors
            e.printStackTrace();
        } finally {
            // Finally block used to close resources
            try {
                if (cstmt != null)
                    cstmt.close();
            } catch (SQLException se2) {
                se2.printStackTrace();
            } // nothing we can do
            try {
                if (conn != null)
                    conn.close();
            } catch (SQLException se) {
                se.printStackTrace();
            } // end finally try
        } // end try
        System.out.println("Goodbye!");
    }
}
